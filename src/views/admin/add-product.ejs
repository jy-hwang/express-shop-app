<%- include('../partials/header') %>

<div class="d-flex justify-content-between align-items-center">
  <h2>상품 생성하기</h2>
  <a href="/admin/products" class="btn btn-primary">뒤로</a>
</div>
<br>

<form method="POST" action="/admin/products" enctype="multipart/form-data">
  <div class="row mb-3">
    <label for="title" class="form-label">Title</label>
    <input type="text" id="title" class="form-control" name="title" placeholder="Title" required>
  </div>

  <div class="row mb-3">
    <label for="description" class="form-label">Description</label>
    <textarea name="desc" id="description" class="form-control" cols="30" rows="10" placeholder="Description" required></textarea>
  </div>

  <div class="row mb-3">
    <label for="category" class="form-label">Category</label>
    <select name="category" id="category" class="form-control">
      <% categories.forEach((category) => { %>
        <option value="<%= category.slug %>"><%= category.title %></option>
        <% }) %>
    </select>
  </div>

  <div class="row mb-3">
    <label for="price" class="form-label">Price</label>
    <input type="number" id="price" class="form-control" name="price" placeholder="Price" required>
  </div>

  <div class="row mb-3">
    <label for="image" class="form-label">Image</label>
    <input type="file" id="image" class="form-control" name="image" required>
    <img src="#" alt="" id="imagePreview" class="mt-3" style="width: 100px;">
  </div>
  <button class="btn btn-primary mb-3">생성하기</button>
</form>

<script>
  function readFileAsText(inputEl) {
    if (inputEl.files && inputEl.files[0]) {
      let reader = new FileReader();

      reader.readAsText(inputEl.files[0]);

      reader.onload = function(e) {
        console.log(e.target.result);
      };
    }
  }

  function readFileAsDataURL(inputEl) {
    if (inputEl.files && inputEl.files[0]) {
      console.log(inputEl);
      console.log(inputEl.files[0]);

      let reader = new FileReader();

      reader.readAsDataURL(inputEl.files[0]);

      reader.onload = function(e) {
        //console.log(e.target.result);
        document.querySelector('#imagePreview').setAttribute('src', e.target.result);
      };
    }
  }

  function readFileAsArrayBuffer(inputEl) {
    if (inputEl.files && inputEl.files[0]) {
      console.log(inputEl);
      console.log(inputEl.files[0]);

      let reader = new FileReader();

      reader.readAsArrayBuffer(inputEl.files[0]);

      reader.onload = function(e) {
        console.log(e.target.result);
      };
    }
  }

  function readFileAsBinaryString(inputEl) {
    if (inputEl.files && inputEl.files[0]) {
      let reader = new FileReader();

      reader.readFileAsBinaryString(inputEl.files[0]);

      reader.onload = function(e) {
        console.log(e.target.result);
      };
    }
  }

  document.querySelector('#image').addEventListener('change', function() {
    readFileAsDataURL(this);
  });

</script>

<%- include('../partials/footer') %>
